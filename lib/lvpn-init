#!/bin/bash
# Crea un nuevo nodo

. "${LVPN_LIBDIR}"/common

# Opciones
# ConnectTo
connectto=""
# Address
address=""
# Port
port=""
# Subnets extra (-s)
subnets=""
# Instalar
install=false
# Habilitar subnet-up (-r)
subnetup=false
# Modo verborrágico
verbose=false
force=false

# Encuentra una IP libre entre los archivos de host
get_ip() {
# Las subnets encontradas
    local subnets=/tmp/$$.subnets
    local ip=""
    local fourth=0
    local tries=0

# Armar la lista de IPs
    grep -i "subnet\s*=" ${LVPN_HOSTS}/* | cut -d'=' -f2 | sort > ${subnets}

# Fallar si hay 250 nodos...
    if [ $(wc -l ${subnets} | cut -d' ' -f1 2>/dev/null) -ge 250 ]; then
# No detecta si hay varios rangos en uso pero por ahora sirve
        error "Este rango está agotado"
        return 1
    fi

# Hasta que encontremos una IP libre elegir el cuarto octeto al azar
    until [ -n "${ip}" ]; do
        let fourth=${RANDOM}%250
# TODO no hardcodear el rango
        local tmpip="192.168.9.${fourth}/32"

# Está en la lista?
        if ! grep -q "${tmpip}" "${subnets}"; then
            ip="${tmpip}"
        fi

# Aumentar la cantidad de intentos
# Por alguna razon let devuelve 1
        let tries++ || true

        if [ ${tries} -ge 250 ]; then
            error "No hay IPs libres"
            return 1
        fi
    done

    $verbose && msg "Obtenida IP libre en ${tries} intentos"
    echo "${ip}"
    return 0
}

# Procesar los flags (ver doc)
while getopts 'vhirfp:a:c:s:l:' arg; do
    case $arg in
        h) help $self; exit 0 ;;
        v) verbose=true ;;
        r) subnetup=true ;;
        i) install=true;;
        f) force=true ;;
        p) port="$OPTARG" ;;
        l) localnet="$OPTARG" ;;
        a) address="$OPTARG" ;;
        c) connectto="$connectto $OPTARG" ;;
        s) subnets="$subnets $OPTARG" ;;
    esac
done ;
let OPTIND--; shift $OPTIND

# TODO chequear que el nombre sea valido
nodename="${1}"

if [ -z "${nodename}" ]; then
    fatal_error "Se necesita un nombre de nodo"
fi

nodedir="${LVPN_DIR}/nodos/${nodename}"
nodefile="${nodedir}/hosts/${nodename}"
conffile="${nodedir}/tinc.conf"

# Con -f se eliminan los archivos anteriores
if $force; then
    rm -r "${nodefile}" "${nodedir}" || true
fi

$verbose && msg "Chequeando sistema..."
if [ -f ${tincdir}/tinc.conf ]; then
    fatal_error "Este sistema ya es un nodo de LibreVPN\! Utilice -f para pisar la instalación local."
fi

$verbose && msg "Creando ${nodename}..."
if [ -f "${nodefile}" ]; then
    fatal_error "El nodo ya existe"
fi

$verbose && msg "Creando ${nodedir}..."
if [ -d "${nodedir}" ]; then
    fatal_error "El directorio del nodo ya existe"
fi

mkdir -p ${nodedir}/hosts || fatal_error "No se pudo crear el directorio"

$verbose && msg "Generando ${nodefile}..."
get_id >>"${nodefile}"

if [ ! -z "${address}" ]; then
    add_to_file "${nodefile}" "Address = ${address}"
fi

if [ ! -z "${port}" ]; then
    add_to_file "${nodefile}" "Port = ${port}"
fi

$verbose && msg "Determinando la IP del nodo..."
if [ -z "${localnet}" ] ; then
    localnet=$(get_ip)

    if [ $? -ne 0 ]; then
        fatal_error "No se pudo determinar una IP para este nodo"
    fi
fi

$verbose && msg "Añadiendo subredes..."
for _subnet in ${localnet} ${subnets}; do
    add_to_file "${nodefile}" "Subnet = ${_subnet}"
done

$verbose && msg "Generando ${conffile}..."
add_to_file "${conffile}" "Name = ${nodename}"
add_to_file "${conffile}" "Mode = switch"

$verbose && msg "Añadiendo hosts..."
if [ -n "${connectto}" ]; then
    ${LVPN} connectto ${nodename} ${connectto}
fi

$verbose && msg "Copiando el resto de archivos..."
cp -t "${nodedir}" "${LVPN_LIBDIR}"/skel/tinc-{up,down}

if ${subnetup} ; then
    cp -t "${nodedir}" "${LVPN_LIBDIR}"/skel/subnet-{up,down}
fi

$verbose && msg "Generando llaves..."
echo -e "\n" | tincd -c "${nodedir}" --generate-keys=${KEYSIZE}

$verbose && msg "Guardando el archivo de host con los demás nodos"
cp -t "${LVPN_HOSTS}" "${nodefile}"

$install && ${LVPN} install ${nodename}

msg "El nodo se ha creado con éxito"
msg "*Importante*: "
msg "* Envíe el archivo que representa su nodo a vpn@hackcoop.com.ar ($nodefile), o"
msg "* Agregue ${nodefile} al repositorio git y publíquelo."

exit 0
